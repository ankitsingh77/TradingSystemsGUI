//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace TradingSystemServer
{
    using System.Runtime.Serialization;


    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "User", Namespace = "http://schemas.datacontract.org/2004/07/TradingSystemServer")]
    public partial class User : object, System.Runtime.Serialization.IExtensibleDataObject
    {

        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;

        private string EmailIdField;

        private string FullNameField;

        private System.Guid IdField;

        private string PasswordField;

        private int TypeField;

        private string UserNameField;

        public System.Runtime.Serialization.ExtensionDataObject ExtensionData
        {
            get
            {
                return this.extensionDataField;
            }
            set
            {
                this.extensionDataField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EmailId
        {
            get
            {
                return this.EmailIdField;
            }
            set
            {
                this.EmailIdField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FullName
        {
            get
            {
                return this.FullNameField;
            }
            set
            {
                this.FullNameField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid Id
        {
            get
            {
                return this.IdField;
            }
            set
            {
                this.IdField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Password
        {
            get
            {
                return this.PasswordField;
            }
            set
            {
                this.PasswordField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Type
        {
            get
            {
                return this.TypeField;
            }
            set
            {
                this.TypeField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserName
        {
            get
            {
                return this.UserNameField;
            }
            set
            {
                this.UserNameField = value;
            }
        }
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "PortFolio", Namespace = "http://schemas.datacontract.org/2004/07/TradingSystemServer")]
    public partial class PortFolio : object, System.Runtime.Serialization.IExtensibleDataObject
    {

        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;

        private double BalanceField;

        private System.Guid PortfolioIdField;

        private TradingSystemServer.Stock[] StocksField;

        private System.Guid UserIdField;

        public System.Runtime.Serialization.ExtensionDataObject ExtensionData
        {
            get
            {
                return this.extensionDataField;
            }
            set
            {
                this.extensionDataField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Balance
        {
            get
            {
                return this.BalanceField;
            }
            set
            {
                this.BalanceField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid PortfolioId
        {
            get
            {
                return this.PortfolioIdField;
            }
            set
            {
                this.PortfolioIdField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public TradingSystemServer.Stock[] Stocks
        {
            get
            {
                return this.StocksField;
            }
            set
            {
                this.StocksField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid UserId
        {
            get
            {
                return this.UserIdField;
            }
            set
            {
                this.UserIdField = value;
            }
        }
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "Stock", Namespace = "http://schemas.datacontract.org/2004/07/TradingSystemServer")]
    public partial class Stock : object, System.Runtime.Serialization.IExtensibleDataObject
    {

        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;

        private double HighPriceField;

        private double LowPriceField;

        private double OpeningPriceField;

        private double PriceField;

        private int QuantityField;

        private System.Guid StockIdField;

        private string StockNameField;

        private string StockSymbolField;

        private int VolumeField;

        public System.Runtime.Serialization.ExtensionDataObject ExtensionData
        {
            get
            {
                return this.extensionDataField;
            }
            set
            {
                this.extensionDataField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public double HighPrice
        {
            get
            {
                return this.HighPriceField;
            }
            set
            {
                this.HighPriceField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public double LowPrice
        {
            get
            {
                return this.LowPriceField;
            }
            set
            {
                this.LowPriceField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public double OpeningPrice
        {
            get
            {
                return this.OpeningPriceField;
            }
            set
            {
                this.OpeningPriceField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Price
        {
            get
            {
                return this.PriceField;
            }
            set
            {
                this.PriceField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Quantity
        {
            get
            {
                return this.QuantityField;
            }
            set
            {
                this.QuantityField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid StockId
        {
            get
            {
                return this.StockIdField;
            }
            set
            {
                this.StockIdField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StockName
        {
            get
            {
                return this.StockNameField;
            }
            set
            {
                this.StockNameField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StockSymbol
        {
            get
            {
                return this.StockSymbolField;
            }
            set
            {
                this.StockSymbolField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Volume
        {
            get
            {
                return this.VolumeField;
            }
            set
            {
                this.VolumeField = value;
            }
        }
    }
}


[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
[System.ServiceModel.ServiceContractAttribute(ConfigurationName = "ITradingService")]
public interface ITradingService
{

    [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/ITradingService/GetUser", ReplyAction = "http://tempuri.org/ITradingService/GetUserResponse")]
    TradingSystemServer.User GetUser(System.Guid id);

    [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/ITradingService/GetUser", ReplyAction = "http://tempuri.org/ITradingService/GetUserResponse")]
    System.Threading.Tasks.Task<TradingSystemServer.User> GetUserAsync(System.Guid id);

    [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/ITradingService/CreateUser", ReplyAction = "http://tempuri.org/ITradingService/CreateUserResponse")]
    System.Guid CreateUser(TradingSystemServer.User userDto);

    [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/ITradingService/CreateUser", ReplyAction = "http://tempuri.org/ITradingService/CreateUserResponse")]
    System.Threading.Tasks.Task<System.Guid> CreateUserAsync(TradingSystemServer.User userDto);

    [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/ITradingService/ValidateUser", ReplyAction = "http://tempuri.org/ITradingService/ValidateUserResponse")]
    TradingSystemServer.User ValidateUser(string userName, string password);

    [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/ITradingService/ValidateUser", ReplyAction = "http://tempuri.org/ITradingService/ValidateUserResponse")]
    System.Threading.Tasks.Task<TradingSystemServer.User> ValidateUserAsync(string userName, string password);

    [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/ITradingService/GetPortFolio", ReplyAction = "http://tempuri.org/ITradingService/GetPortFolioResponse")]
    TradingSystemServer.PortFolio GetPortFolio(System.Guid userId);

    [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/ITradingService/GetPortFolio", ReplyAction = "http://tempuri.org/ITradingService/GetPortFolioResponse")]
    System.Threading.Tasks.Task<TradingSystemServer.PortFolio> GetPortFolioAsync(System.Guid userId);

    [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/ITradingService/GetAllStocks", ReplyAction = "http://tempuri.org/ITradingService/GetAllStocksResponse")]
    TradingSystemServer.Stock[] GetAllStocks();

    [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/ITradingService/GetAllStocks", ReplyAction = "http://tempuri.org/ITradingService/GetAllStocksResponse")]
    System.Threading.Tasks.Task<TradingSystemServer.Stock[]> GetAllStocksAsync();

    [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/ITradingService/CreateStock", ReplyAction = "http://tempuri.org/ITradingService/CreateStockResponse")]
    System.Guid CreateStock(string name, string symbol, double price, int volume);

    [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/ITradingService/CreateStock", ReplyAction = "http://tempuri.org/ITradingService/CreateStockResponse")]
    System.Threading.Tasks.Task<System.Guid> CreateStockAsync(string name, string symbol, double price, int volume);

    [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/ITradingService/AddBalance", ReplyAction = "http://tempuri.org/ITradingService/AddBalanceResponse")]
    double AddBalance(System.Guid userId, double amountToAdd);

    [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/ITradingService/AddBalance", ReplyAction = "http://tempuri.org/ITradingService/AddBalanceResponse")]
    System.Threading.Tasks.Task<double> AddBalanceAsync(System.Guid userId, double amountToAdd);

    [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/ITradingService/PurchaseStock", ReplyAction = "http://tempuri.org/ITradingService/PurchaseStockResponse")]
    bool PurchaseStock(System.Guid stockId, System.Guid userId, int quantity);

    [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/ITradingService/PurchaseStock", ReplyAction = "http://tempuri.org/ITradingService/PurchaseStockResponse")]
    System.Threading.Tasks.Task<bool> PurchaseStockAsync(System.Guid stockId, System.Guid userId, int quantity);

    [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/ITradingService/SellStock", ReplyAction = "http://tempuri.org/ITradingService/SellStockResponse")]
    bool SellStock(System.Guid stockId, System.Guid userId, int quantity);

    [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/ITradingService/SellStock", ReplyAction = "http://tempuri.org/ITradingService/SellStockResponse")]
    System.Threading.Tasks.Task<bool> SellStockAsync(System.Guid stockId, System.Guid userId, int quantity);
}

[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
public interface ITradingServiceChannel : ITradingService, System.ServiceModel.IClientChannel
{
}

[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
public partial class TradingServiceClient : System.ServiceModel.ClientBase<ITradingService>, ITradingService
{

    public TradingServiceClient()
    {
    }

    public TradingServiceClient(string endpointConfigurationName) :
            base(endpointConfigurationName)
    {
    }

    public TradingServiceClient(string endpointConfigurationName, string remoteAddress) :
            base(endpointConfigurationName, remoteAddress)
    {
    }

    public TradingServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) :
            base(endpointConfigurationName, remoteAddress)
    {
    }

    public TradingServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) :
            base(binding, remoteAddress)
    {
    }

    public TradingSystemServer.User GetUser(System.Guid id)
    {
        return base.Channel.GetUser(id);
    }

    public System.Threading.Tasks.Task<TradingSystemServer.User> GetUserAsync(System.Guid id)
    {
        return base.Channel.GetUserAsync(id);
    }

    public System.Guid CreateUser(TradingSystemServer.User userDto)
    {
        return base.Channel.CreateUser(userDto);
    }

    public System.Threading.Tasks.Task<System.Guid> CreateUserAsync(TradingSystemServer.User userDto)
    {
        return base.Channel.CreateUserAsync(userDto);
    }

    public TradingSystemServer.User ValidateUser(string userName, string password)
    {
        return base.Channel.ValidateUser(userName, password);
    }

    public System.Threading.Tasks.Task<TradingSystemServer.User> ValidateUserAsync(string userName, string password)
    {
        return base.Channel.ValidateUserAsync(userName, password);
    }

    public TradingSystemServer.PortFolio GetPortFolio(System.Guid userId)
    {
        return base.Channel.GetPortFolio(userId);
    }

    public System.Threading.Tasks.Task<TradingSystemServer.PortFolio> GetPortFolioAsync(System.Guid userId)
    {
        return base.Channel.GetPortFolioAsync(userId);
    }

    public TradingSystemServer.Stock[] GetAllStocks()
    {
        return base.Channel.GetAllStocks();
    }

    public System.Threading.Tasks.Task<TradingSystemServer.Stock[]> GetAllStocksAsync()
    {
        return base.Channel.GetAllStocksAsync();
    }

    public System.Guid CreateStock(string name, string symbol, double price, int volume)
    {
        return base.Channel.CreateStock(name, symbol, price, volume);
    }

    public System.Threading.Tasks.Task<System.Guid> CreateStockAsync(string name, string symbol, double price, int volume)
    {
        return base.Channel.CreateStockAsync(name, symbol, price, volume);
    }

    public double AddBalance(System.Guid userId, double amountToAdd)
    {
        return base.Channel.AddBalance(userId, amountToAdd);
    }

    public System.Threading.Tasks.Task<double> AddBalanceAsync(System.Guid userId, double amountToAdd)
    {
        return base.Channel.AddBalanceAsync(userId, amountToAdd);
    }

    public bool PurchaseStock(System.Guid stockId, System.Guid userId, int quantity)
    {
        return base.Channel.PurchaseStock(stockId, userId, quantity);
    }

    public System.Threading.Tasks.Task<bool> PurchaseStockAsync(System.Guid stockId, System.Guid userId, int quantity)
    {
        return base.Channel.PurchaseStockAsync(stockId, userId, quantity);
    }

    public bool SellStock(System.Guid stockId, System.Guid userId, int quantity)
    {
        return base.Channel.SellStock(stockId, userId, quantity);
    }

    public System.Threading.Tasks.Task<bool> SellStockAsync(System.Guid stockId, System.Guid userId, int quantity)
    {
        return base.Channel.SellStockAsync(stockId, userId, quantity);
    }
}
